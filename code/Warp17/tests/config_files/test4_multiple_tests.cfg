# Generate config file with multiple tests (10, TODO extend) for real-situation testing

# Assuming a back to back topology with:
# PORT 0 - client port (p1p1, dpdk-binded)
# PORT 1 - server port (p1p2, dpdk-binded)

# TODO: vedere cosa bisogna modificare per farlo funzionare con warp17 installato in un altro server

###########################################
# Client port configuration
###########################################
add tests l3_intf port 0 ip 10.0.0.1 mask 255.255.255.0
add tests l3_intf port 0 ip 10.0.0.2 mask 255.255.255.0
add tests l3_intf port 0 ip 10.0.0.3 mask 255.255.255.0
add tests l3_intf port 0 ip 10.0.0.4 mask 255.255.255.0
add tests l3_intf port 0 ip 10.0.0.5 mask 255.255.255.0
add tests l3_intf port 0 ip 10.0.0.6 mask 255.255.255.0
add tests l3_gw port 0 gw 10.0.0.253

set tests mtu port 0 2048


###########################################
# Define test cases (on PORT 0) -- asyncronous cases (they start all as soon as possible without waiting others to finish)
###########################################
# TODO: define 10 different test cases (then ask BÃ¼hler if we should add more)

# Test 0 -- tcp client, set up 200k sessions that go up and down, send from 100'000 sessions
add tests client tcp port 0 test-case-id 0 src 10.0.0.1 10.0.0.1 sport 10001 60000 dest 10.0.0.253 10.0.0.253 dport 6001 6004

set tests timeouts port 0 test-case-id 0 init 10
set tests timeouts port 0 test-case-id 0 uptime 60
set tests timeouts port 0 test-case-id 0 downtime 30
set tests rate port 0 test-case-id 0 open 10000
set tests rate port 0 test-case-id 0 send 100000
set tests rate port 0 test-case-id 0 close 10000

set tests criteria port 0 test-case-id 0 run-time 600
set tests client raw port 0 test-case-id 0 data-req-plen 500 data-resp-plen 0
set tests async port 0 test-case-id 0
########################

# Test 1 -- tcp client, set up 200k sessions that stay up forever, always sending data
add tests client tcp port 0 test-case-id 1 src 10.0.0.1 10.0.0.1 sport 10001 60000 dest 10.0.0.253 10.0.0.253 dport 6017 6020

set tests timeouts port 0 test-case-id 1 init 10
set tests timeouts port 0 test-case-id 1 uptime infinite
set tests rate port 0 test-case-id 1 open 50000
set tests rate port 0 test-case-id 1 send 200000

set tests criteria port 0 test-case-id 1 run-time 600
set tests client raw port 0 test-case-id 1 data-req-plen 500 data-resp-plen 500
set tests async port 0 test-case-id 1
########################

# Test 2 -- tcp client, set up 600k sessions that stay up forever, never sending data
add tests client tcp port 0 test-case-id 2 src 10.0.0.2 10.0.0.2 sport 10001 60000 dest 10.0.0.253 10.0.0.253 dport 6005 6016

set tests timeouts port 0 test-case-id 2 init 10
set tests timeouts port 0 test-case-id 2 uptime infinite
set tests rate port 0 test-case-id 2 open 50000
set tests rate port 0 test-case-id 2 send 0

set tests criteria port 0 test-case-id 2 run-time 600
set tests async port 0 test-case-id 2
########################

# Test 3 -- tcp client, set up 100k sessions that go up and down, send from 10'000 sessions
add tests client tcp port 0 test-case-id 3 src 10.0.0.1 10.0.0.1 sport 10001 60000 dest 10.0.0.253 10.0.0.253 dport 6001 6002

set tests timeouts port 0 test-case-id 3 init 10
set tests timeouts port 0 test-case-id 3 uptime 15
set tests timeouts port 0 test-case-id 3 downtime 30
set tests rate port 0 test-case-id 3 open 10000
set tests rate port 0 test-case-id 3 send 10000
set tests rate port 0 test-case-id 3 close 100000

set tests criteria port 0 test-case-id 3 run-time 600
set tests client raw port 0 test-case-id 3 data-req-plen 500 data-resp-plen 0
set tests async port 0 test-case-id 3
########################

# Test 4 -- tcp client, set up 100k sessions that stay up 20 sec and down 2min, send at max rate when up
add tests client tcp port 0 test-case-id 4 src 10.0.0.1 10.0.0.1 sport 10001 60000 dest 10.0.0.253 10.0.0.253 dport 6017 6018

set tests timeouts port 0 test-case-id 4 init 10
set tests timeouts port 0 test-case-id 4 uptime 20
set tests timeouts port 0 test-case-id 4 downtime 120
set tests rate port 0 test-case-id 4 open 50000
set tests rate port 0 test-case-id 4 send infinite

set tests criteria port 0 test-case-id 4 run-time 600
set tests client raw port 0 test-case-id 4 data-req-plen 500 data-resp-plen 500
set tests async port 0 test-case-id 4
########################

# Test 5 -- tcp client, set up 600k sessions that go up and down, sending few data each
add tests client tcp port 0 test-case-id 5 src 10.0.0.2 10.0.0.2 sport 10001 60000 dest 10.0.0.253 10.0.0.253 dport 6021 6032

set tests timeouts port 0 test-case-id 5 init 10
set tests timeouts port 0 test-case-id 5 uptime 10
set tests timeouts port 0 test-case-id 5 downtime 30
set tests rate port 0 test-case-id 5 open 50000
set tests rate port 0 test-case-id 5 send 10000

set tests criteria port 0 test-case-id 5 run-time 600
set tests client raw port 0 test-case-id 5 data-req-plen 300 data-resp-plen 300
set tests async port 0 test-case-id 5
########################

# Test 6 -- tcp client, set up 400k sessions that go up and down, always send small packets at high rate
add tests client tcp port 0 test-case-id 6 src 10.0.0.2 10.0.0.2 sport 10001 60000 dest 10.0.0.253 10.0.0.253 dport 6033 6040

set tests timeouts port 0 test-case-id 6 init 10
set tests timeouts port 0 test-case-id 6 uptime 60
set tests timeouts port 0 test-case-id 6 downtime 10
set tests rate port 0 test-case-id 6 open 50000
set tests rate port 0 test-case-id 6 send 1000

set tests criteria port 0 test-case-id 6 run-time 600
set tests client raw port 0 test-case-id 6 data-req-plen 60 data-resp-plen 60
set tests async port 0 test-case-id 6
########################

# Test 7 -- tcp client, set up 400k sessions that go up and down, only send small packets at low rate (burst of small packets every minute)
add tests client tcp port 0 test-case-id 7 src 10.0.0.2 10.0.0.2 sport 10001 60000 dest 10.0.0.253 10.0.0.253 dport 6033 6040

set tests timeouts port 0 test-case-id 7 init 10
set tests timeouts port 0 test-case-id 7 uptime 5
set tests timeouts port 0 test-case-id 7 downtime 60
set tests rate port 0 test-case-id 7 open 50000
set tests rate port 0 test-case-id 7 send infinite

set tests criteria port 0 test-case-id 7 run-time 600
set tests client raw port 0 test-case-id 7 data-req-plen 60 data-resp-plen 60
set tests async port 0 test-case-id 7
########################


#UDP tests don't work together with TCP tests
## Test 10 -- udp stream of 1500 bytes packets from server to client in 5s bursts every 15 seconds (streaming)
#add tests client udp port 0 test-case-id 10 src 10.0.0.3 10.0.0.3 sport 10001 10100 dest 10.0.0.252 10.0.0.252 dport 6300 6300
#set tests udp raw port 0 test-case-id 10 data-req-plen 0 data-resp-plen 1500
#set tests tcp-options port 0 test-case-id 10 win-size 2048
#
#set tests timeouts port 0 test-case-id 10 init 5
#set tests timeouts port 0 test-case-id 10 uptime 5
#set tests timeouts port 0 test-case-id 10 downtime 15
#set tests rate port 0 test-case-id 10 send infinite
#
#set tests criteria port 0 test-case-id 10 run-time 600
#set tests async port 0 test-case-id 10
########################
#
#
## Test 11 -- udp stream from multiple ips (doesn't work)
#add tests client udp port 0 test-case-id 11 src 10.0.0.3 10.0.0.6 sport 10001 10100 dest 10.0.0.252 10.0.0.252 dport 6200 6200
#set tests udp raw port 0 test-case-id 11 data-req-plen 100 data-resp-plen 500
#
#set tests timeouts port 0 test-case-id 11 init 5
#set tests timeouts port 0 test-case-id 11 uptime 10
#set tests timeouts port 0 test-case-id 11 downtime 15
#set tests rate port 0 test-case-id 11 send 400
#
#set tests criteria port 0 test-case-id 11 run-time 600
#set tests async port 0 test-case-id 11
########################


###########################################
# Define test server cases (on PORT 1)
###########################################
add tests l3_intf port 1 ip 10.0.0.253 mask 255.255.255.0
add tests l3_intf port 1 ip 10.0.0.252 mask 255.255.255.0

set tests mtu port 1 2048

# Server 0 (accept connections and packets without sending response)
add tests server tcp port 1 test-case-id 0 src 10.0.0.253 10.0.0.253 sport 6001 6016
set tests server raw port 1 test-case-id 0 data-req-plen 500 data-resp-plen 0
set tests async port 1 test-case-id 0

# Server 1 (accept connections and packets and send 500bytes response to each data packet)
add tests server tcp port 1 test-case-id 1 src 10.0.0.253 10.0.0.253 sport 6017 6020
set tests server raw port 1 test-case-id 1 data-req-plen 500 data-resp-plen 500
set tests async port 1 test-case-id 1

# Server 2 (accept connections and packets and send 300bytes response to each data packet)
add tests server tcp port 1 test-case-id 2 src 10.0.0.253 10.0.0.253 sport 6021 6032
set tests server raw port 1 test-case-id 2 data-req-plen 300 data-resp-plen 300
set tests async port 1 test-case-id 2

## Server 10 (udp server)
#add tests server udp port 1 test-case-id 10 src 10.0.0.252 10.0.0.252 sport 6300 6300
#set tests server raw port 1 test-case-id 10 data-req-plen 0 data-resp-plen 1500
#set tests tcp-options port 1 test-case-id 10 win-size 2048
#set tests async port 1 test-case-id 10
#
## Server 11 (udp server)
#add tests server udp port 1 test-case-id 11 src 10.0.0.252 10.0.0.252 sport 6200 6200
#set tests server raw port 1 test-case-id 11 data-req-plen 100 data-resp-plen 500
#set tests async port 1 test-case-id 11

###########################################
# Start tests
###########################################

# Start the tests on PORT 1 (servers in this case)
start tests port 1

# Start the tests on PORT 0 (clients in this case)
start tests port 0

# Show the UI window
show tests ui


























