# Assuming a back to back topology with:
# PORT 0 - client port (p1p1, dpdk-binded)
# PORT 1 - server port (p1p2, kernel-binded)

###########################################
# Client port configuration (add L3 interface and default gw)
###########################################
add tests l3_intf port 0 ip 10.0.0.1 mask 255.255.255.0
set tests mtu port 0 5000
add tests l3_gw port 0 gw 10.0.0.253

# Configure a TCP client test case (ID 0) on PORT 0 (from 10.0.0.1:10000 to 10.0.0.253:6001)
add tests client tcp port 0 test-case-id 0 src 10.0.0.1 10.0.0.1 sport 10000 10000 dest 10.0.0.253 10.0.0.253 dport 6001 6001

# Configure TCP stack options
set tests tcp-options port 0 test-case-id 0 win-size 4096

# Configure the timeout profile for test case ID 0 on PORT 0:
set tests timeouts port 0 test-case-id 0 init 10               # start after 10s
set tests timeouts port 0 test-case-id 0 uptime 30             # connection stays up for 30s
set tests timeouts port 0 test-case-id 0 downtime 10           # connection stays down for 10s

# Set to 1 if data should be sent along with the session, 0 otherwise
set tests rate port 0 test-case-id 0 send 1

# Timeout for when to stop test (clients stop sending)
set tests criteria port 0 test-case-id 0 run-time 180

# Configure the RAW application values for test case ID 0 on PORT 0 (request and response size)
set tests client raw port 0 test-case-id 0 data-req-plen 100 data-resp-plen 200

###########################################
# Start tests
###########################################

# Start the tests on PORT 0 (clients in this case)
start tests port 0

# Show the UI window
show tests ui
